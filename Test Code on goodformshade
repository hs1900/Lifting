%% GMM
clear;clc;close all;
GMM = 'GMMv2.avi';
Obj = VideoWriter(GMM);
writerObj.FrameRate = 30;
open(Obj);

vidIn = 'badformshade.avi';
vidObj = VideoReader(vidIn); 
nFrames = vidObj.NumberOfFrames;
vidHeight = vidObj.Height; 
vidWidth = vidObj.Width;

% Train frames 
foregroundDetector = vision.ForegroundDetector('NumGaussians', 3,'NumTrainingFrames', 130,'LearningRate',.0001);

% Complete background subtraction and Write Video
%videoReader = vision.VideoFileReader(vidIn);

% Morphological parameter
seOpen = strel('square', 12);
%  seClose = strel('square', 1);

BBox = zeros(nFrames,4);
for i = 1:nFrames
    frame = read(vidObj,i);
    foreground = step(foregroundDetector, frame);    
%   writeVideo(Obj,double(foreground));    
    IMopen = imopen(foreground,seOpen);
%   IMclose = imclose(foreground,seClose);   

% Blob Bnalysis to Obtain Boundary
    blobAnalysis = vision.BlobAnalysis('BoundingBoxOutputPort', true, ...
        'AreaOutputPort', false, 'CentroidOutputPort', false, ...
        'MinimumBlobArea', 4000);
    bbox = step(blobAnalysis, IMopen);

    index = find(max(bbox(:,3) .*bbox(:,4)));
    if size(bbox) > [0 3]
        BBox(i,:) = bbox(index,:);
    end
    
% Can Insert Box for Visual Confirmation
%     result = insertShape( 255*uint8(IMopen), 'Rectangle', BBox(i,:), 'Color', 'green');
%     IMopen = result;

    writeVideo(Obj,255*uint8(IMopen));
end

close(Obj);

%% Matching Lower Back
clc;close all;
% Set Range and Analyze
cutoff= floor(nFrames*(1/3));
tempbox = BBox(cutoff:2*cutoff,3);

% Locate Butt
tempmax = find(tempbox == max(tempbox));
endFrameLoc = tempmax+cutoff-1;
vidObj2 = VideoReader(GMM); 

endFrameLoc = endFrameLoc(1,:);
EndFrame = (read(vidObj2,endFrameLoc));
% imshow(uint8(EndFrame));

EndFrameBBox = BBox(endFrameLoc,:);
buttCol = EndFrameBBox(1)+EndFrameBBox(3)-1;
buttRow = find(EndFrame(:,buttCol) > 50,1);

buttCoords = zeros(nFrames,2);

% Create Template Around Butt
buttFrame = rgb2gray(read(vidObj,endFrameLoc));

backTempColStart = round(EndFrameBBox(3)*(1/3)); %first hardcoded the size of the box for our image
backTempColEnd = round(EndFrameBBox(3)*(1/10));
backTempRowStart = round(EndFrameBBox(4)*(3/5));

buttCoords(endFrameLoc,1) = buttCol-backTempColStart;
buttCoords(endFrameLoc,2) = buttRow-backTempRowStart;

% Create New Template for Back
backTemp = buttFrame(buttRow-backTempRowStart:buttRow, ...
           buttCol-backTempColStart:buttCol+backTempColEnd);

 %Template Match Lower Back
for m = endFrameLoc-1:-1:cutoff
    prevFrame = rgb2gray(read(vidObj,m));
    [dx, dy, matchblock] = templatematching(backTemp,prevFrame,buttCol-backTempColStart,buttRow-backTempRowStart ,3);

    imshow(uint8(matchblock));
    backTemp = matchblock;
    
    buttCol = buttCol+dx;
    buttRow = buttRow+dy;
    
    buttCoords(m,1) = buttCol-backTempColStart;
    buttCoords(m,2) = buttRow-backTempRowStart;
end

%% Matching Lower Back Foward

buttCol = EndFrameBBox(1)+EndFrameBBox(3)-1;
buttRow = find(EndFrame(:,buttCol) > 50,1);

backTemp = buttFrame(buttRow-backTempRowStart:buttRow, ...
           buttCol-backTempColStart:buttCol+backTempColEnd);
       
for m = endFrameLoc+1:2*cutoff
    nextFrame = rgb2gray(read(vidObj,m));
    [dx, dy, matchblock] = templatematching(backTemp,nextFrame,buttCol-backTempColStart,buttRow-backTempRowStart ,1);

    imshow(uint8(matchblock));
    backTemp = matchblock;
    
    buttCol = buttCol+dx;
    buttRow = buttRow+dy;
    
   buttCoords(m,1) = buttCol-backTempColStart;
   buttCoords(m,2) = buttRow-backTempRowStart;
end

%% Pinpointing back as point of interest

buttObj = VideoReader(GMM);
buttPOI = zeros(nFrames,2);

for m = cutoff:2*cutoff
    frame = read(buttObj,m);
    bFrame = frame(buttCoords(m,2):backTempRowStart+buttCoords(m,2),buttCoords(m,1):backTempColStart+buttCoords(m,1)+backTempColEnd);
    imshow(bFrame);
    binaryMatrix = bFrame > 200;
    [sel c] = max(binaryMatrix ~= 0, [], 1);
    binLoc = sel.*c;
    binCol = max(find(binLoc));
    binRow = min(find(binaryMatrix(:,binCol)));
    buttPOI(m,1) = binCol+buttCoords(m,1);
    buttPOI(m,2) = binRow+buttCoords(m,2);
end
